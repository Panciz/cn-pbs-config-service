plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}
def secrets = new Properties()
def secretFile= file('secrets.properties')
if(secretFile.exists() ){
    secretFile.withInputStream {
        stream -> secrets.load(stream)
    }
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

description = 'Provides functionality for centralizing the application configuration.'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-config-server'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage {
    if(secrets.registryUrl){
        imageName = "${secrets.registryUrl}/${secrets.registryUsername.toLowerCase()}/${project.name}"
    }else{
        imageName="${project.name}"
    }
    environment = ["BP_JVM_VERSION": "17.*"]

    //Push image da locale creare segreti in
    docker {
        publishRegistry {
            username = secrets.registryUsername
            password = secrets.registryToken
            url = secrets.registryUrl
        }
    }
}